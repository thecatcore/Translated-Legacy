repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.

    // Used for the fabric toolchain in this project.
    maven {
        name = 'Babric'
        url = 'https://maven.glass-launcher.net/babric'
    }
    // Used for mappings.
    maven {
        name = 'Glass Releases'
        url = 'https://maven.glass-launcher.net/releases'
    }
    // Used for StationAPI and HowManyItems.
    maven {
        name = 'Glass Snapshots'
        url = 'https://maven.glass-launcher.net/snapshots'
    }
    // Used for a StationAPI dependency.
    maven {
        name = 'Froge'
        url 'https://maven.minecraftforge.net/'
    }
    // Used for projects that do not have a maven repository, but do have a GitHub repository with working build scripts.
    maven {
        name = 'Jitpack'
        url = 'https://jitpack.io'
    }
    // Used for another StationAPI dependency
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    mavenCentral()
}


tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

dependencies {
    api project(path: ":babric", configuration: "namedElements")

    implementation "org.slf4j:slf4j-api:1.8.0-beta4"
    implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.2'

    modImplementation "net.modificationstation:StationAPI:${project.stapi_version}"

    // Optional, but convenient mods for mod creators and users alike.
//    modImplementation("com.github.calmilamsy:ModMenu:${project.modmenu_version}") {
//        transitive false
//    }
//    modImplementation("net.glasslauncher.mods:GlassConfigAPI:${project.gcapi_version}") {
//        transitive false
//    }
//    modImplementation("net.glasslauncher:HowManyItems-Fabric-Unofficial:${project.howmanyitems_version}") {
//        transitive false
//    }
//    modImplementation ("com.github.paulevsGitch:BHCreative:${project.bhcreative_version}") {
//        transitive false
//    }
}